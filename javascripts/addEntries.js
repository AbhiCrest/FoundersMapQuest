// Generated by CoffeeScript 2.3.1
(function() {
  window.addEntry = window.addEntry = class addEntry {
    constructor() {
      this.CompanyName = $("#CompanyName");
      this.founder = $("#founder");
      this.city = $("#city");
      this.country = $("#country");
      this.postalCode = $("#postalCode");
      this.streetAddress = $("#streetAddress");
      this.latitude = $("#latitude");
      this.longitude = $("#longitude");
      this.photoLink = $("#photoLink");
      this.website = $("#website");
      this.data = [];
    }

    //@fs = require 'fs'
    init() {
      return this.validateEntries();
    }

    validateEntries() {
      var fieldValue, flag, i, index, len, locator, value;
      console.log("in form validation");
      flag = false;
      index = 0;
      locator = ["CompanyName", "founder", "city", "country", "postalCode", "streetAddress", "photoLink", "website", "latitude", "longitude"];
      for (index = i = 0, len = locator.length; i < len; index = ++i) {
        value = locator[index];
        fieldValue = $("#" + value).val();
        if (fieldValue === "") {
          console.log($("#" + value).attr("name") + " is Wrong");
          return flag = false;
        } else {
          if (value === "postalCode") {
            if (!(this.validateZipCode(fieldValue))) {
              console.log($("#" + value).attr("name") + " is Wrong");
              return flag = false;
            } else {
              this.data.push(fieldValue);
              flag = true;
            }
          } else if ((value === "website") || (value === "photoLink")) {
            if (!(this.validateURL(fieldValue))) {
              console.log($("#" + value).attr("name") + " is Wrong");
              return flag = false;
            } else {
              this.data.push(fieldValue);
              flag = true;
            }
          } else {
            this.data.push(fieldValue);
            flag = true;
            console.log("data gathered :- " + this.data);
          }
        }
      }
    }

    /*if (flag == true)
    			@fs.writeFile  "data/data.csv" ,@data, (err) =>
    if(err)
    	console.log(err)

    console.log("done")	*/
    validateURL(url) {
      var urlPattern;
      urlPattern = /^(?:(?:https?|ftp):\/\/)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/\S*)?$/;
      return urlPattern.test(url);
    }

    validateZipCode(elementValue) {
      var zipCodePattern;
      zipCodePattern = /^\d{6}$|^\d{5}-\d{4}$/;
      return zipCodePattern.test(elementValue);
    }

  };

}).call(this);
